//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheLuup.theluupservicereference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int U_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int U_id {
            get {
                return this.U_idField;
            }
            set {
                if ((this.U_idField.Equals(value) != true)) {
                    this.U_idField = value;
                    this.RaisePropertyChanged("U_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Restuarent", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class Restuarent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverimageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int R_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coverimage {
            get {
                return this.CoverimageField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverimageField, value) != true)) {
                    this.CoverimageField = value;
                    this.RaisePropertyChanged("Coverimage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int R_id {
            get {
                return this.R_idField;
            }
            set {
                if ((this.R_idField.Equals(value) != true)) {
                    this.R_idField = value;
                    this.RaisePropertyChanged("R_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Menues", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class Menues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FooddescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodimageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Mu_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int R_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fooddescription {
            get {
                return this.FooddescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FooddescriptionField, value) != true)) {
                    this.FooddescriptionField = value;
                    this.RaisePropertyChanged("Fooddescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Foodimage {
            get {
                return this.FoodimageField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodimageField, value) != true)) {
                    this.FoodimageField = value;
                    this.RaisePropertyChanged("Foodimage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Foodname {
            get {
                return this.FoodnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodnameField, value) != true)) {
                    this.FoodnameField = value;
                    this.RaisePropertyChanged("Foodname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mu_id {
            get {
                return this.Mu_idField;
            }
            set {
                if ((this.Mu_idField.Equals(value) != true)) {
                    this.Mu_idField = value;
                    this.RaisePropertyChanged("Mu_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int R_id {
            get {
                return this.R_idField;
            }
            set {
                if ((this.R_idField.Equals(value) != true)) {
                    this.R_idField = value;
                    this.RaisePropertyChanged("R_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LRequest", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class LRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Lr_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Lr_statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int U_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Ur_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Lr_id {
            get {
                return this.Lr_idField;
            }
            set {
                if ((this.Lr_idField.Equals(value) != true)) {
                    this.Lr_idField = value;
                    this.RaisePropertyChanged("Lr_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lr_status {
            get {
                return this.Lr_statusField;
            }
            set {
                if ((object.ReferenceEquals(this.Lr_statusField, value) != true)) {
                    this.Lr_statusField = value;
                    this.RaisePropertyChanged("Lr_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int U_id {
            get {
                return this.U_idField;
            }
            set {
                if ((this.U_idField.Equals(value) != true)) {
                    this.U_idField = value;
                    this.RaisePropertyChanged("U_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ur_id {
            get {
                return this.Ur_idField;
            }
            set {
                if ((this.Ur_idField.Equals(value) != true)) {
                    this.Ur_idField = value;
                    this.RaisePropertyChanged("Ur_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LFreinds", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class LFreinds : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChatcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Lp_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int U_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Uf_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chatcode {
            get {
                return this.ChatcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatcodeField, value) != true)) {
                    this.ChatcodeField = value;
                    this.RaisePropertyChanged("Chatcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Lp_id {
            get {
                return this.Lp_idField;
            }
            set {
                if ((this.Lp_idField.Equals(value) != true)) {
                    this.Lp_idField = value;
                    this.RaisePropertyChanged("Lp_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int U_id {
            get {
                return this.U_idField;
            }
            set {
                if ((this.U_idField.Equals(value) != true)) {
                    this.U_idField = value;
                    this.RaisePropertyChanged("U_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Uf_id {
            get {
                return this.Uf_idField;
            }
            set {
                if ((this.Uf_idField.Equals(value) != true)) {
                    this.Uf_idField = value;
                    this.RaisePropertyChanged("Uf_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LChats", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class LChats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int C_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string C_messageeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string C_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChatcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int U_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Uf_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int C_id {
            get {
                return this.C_idField;
            }
            set {
                if ((this.C_idField.Equals(value) != true)) {
                    this.C_idField = value;
                    this.RaisePropertyChanged("C_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string C_messagee {
            get {
                return this.C_messageeField;
            }
            set {
                if ((object.ReferenceEquals(this.C_messageeField, value) != true)) {
                    this.C_messageeField = value;
                    this.RaisePropertyChanged("C_messagee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string C_type {
            get {
                return this.C_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.C_typeField, value) != true)) {
                    this.C_typeField = value;
                    this.RaisePropertyChanged("C_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chatcode {
            get {
                return this.ChatcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatcodeField, value) != true)) {
                    this.ChatcodeField = value;
                    this.RaisePropertyChanged("Chatcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int U_id {
            get {
                return this.U_idField;
            }
            set {
                if ((this.U_idField.Equals(value) != true)) {
                    this.U_idField = value;
                    this.RaisePropertyChanged("U_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Uf_id {
            get {
                return this.Uf_idField;
            }
            set {
                if ((this.Uf_idField.Equals(value) != true)) {
                    this.Uf_idField = value;
                    this.RaisePropertyChanged("Uf_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupChat", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class GroupChat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gcode {
            get {
                return this.GcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GcodeField, value) != true)) {
                    this.GcodeField = value;
                    this.RaisePropertyChanged("Gcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gid {
            get {
                return this.GidField;
            }
            set {
                if ((this.GidField.Equals(value) != true)) {
                    this.GidField = value;
                    this.RaisePropertyChanged("Gid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gname {
            get {
                return this.GnameField;
            }
            set {
                if ((object.ReferenceEquals(this.GnameField, value) != true)) {
                    this.GnameField = value;
                    this.RaisePropertyChanged("Gname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Uid {
            get {
                return this.UidField;
            }
            set {
                if ((this.UidField.Equals(value) != true)) {
                    this.UidField = value;
                    this.RaisePropertyChanged("Uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/theluupwcf")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="theluupservicereference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/signin", ReplyAction="http://tempuri.org/IService1/signinResponse")]
        string signin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/signin", ReplyAction="http://tempuri.org/IService1/signinResponse")]
        System.Threading.Tasks.Task<string> signinAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        string AddUser(string email, string password, string firstname, string lastname, string image, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        System.Threading.Tasks.Task<string> AddUserAsync(string email, string password, string firstname, string lastname, string image, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        TheLuup.theluupservicereference.Users getUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.Users> getUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsers", ReplyAction="http://tempuri.org/IService1/getUsersResponse")]
        TheLuup.theluupservicereference.Users[] getUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUsers", ReplyAction="http://tempuri.org/IService1/getUsersResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.Users[]> getUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserID", ReplyAction="http://tempuri.org/IService1/getUserIDResponse")]
        string getUserID(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserID", ReplyAction="http://tempuri.org/IService1/getUserIDResponse")]
        System.Threading.Tasks.Task<string> getUserIDAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        string DeleteUser(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        string EditUser(int uid, string email, string firstname, string lastname, string image, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        System.Threading.Tasks.Task<string> EditUserAsync(int uid, string email, string firstname, string lastname, string image, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddResturant", ReplyAction="http://tempuri.org/IService1/AddResturantResponse")]
        string AddResturant(string firstname, string location, string image, string coverimage, string rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddResturant", ReplyAction="http://tempuri.org/IService1/AddResturantResponse")]
        System.Threading.Tasks.Task<string> AddResturantAsync(string firstname, string location, string image, string coverimage, string rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getResturant", ReplyAction="http://tempuri.org/IService1/getResturantResponse")]
        TheLuup.theluupservicereference.Restuarent getResturant(int r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getResturant", ReplyAction="http://tempuri.org/IService1/getResturantResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.Restuarent> getResturantAsync(int r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getResturants", ReplyAction="http://tempuri.org/IService1/getResturantsResponse")]
        TheLuup.theluupservicereference.Restuarent[] getResturants();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getResturants", ReplyAction="http://tempuri.org/IService1/getResturantsResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.Restuarent[]> getResturantsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditResturant", ReplyAction="http://tempuri.org/IService1/EditResturantResponse")]
        string EditResturant(int rid, string firstname, string location, string image, string coverimage, string rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditResturant", ReplyAction="http://tempuri.org/IService1/EditResturantResponse")]
        System.Threading.Tasks.Task<string> EditResturantAsync(int rid, string firstname, string location, string image, string coverimage, string rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteResturant", ReplyAction="http://tempuri.org/IService1/DeleteResturantResponse")]
        string DeleteResturant(int rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteResturant", ReplyAction="http://tempuri.org/IService1/DeleteResturantResponse")]
        System.Threading.Tasks.Task<string> DeleteResturantAsync(int rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddManagement", ReplyAction="http://tempuri.org/IService1/AddManagementResponse")]
        string AddManagement(string u_id, string r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddManagement", ReplyAction="http://tempuri.org/IService1/AddManagementResponse")]
        System.Threading.Tasks.Task<string> AddManagementAsync(string u_id, string r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRID", ReplyAction="http://tempuri.org/IService1/getRIDResponse")]
        int getRID(string u_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRID", ReplyAction="http://tempuri.org/IService1/getRIDResponse")]
        System.Threading.Tasks.Task<int> getRIDAsync(string u_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditManagement", ReplyAction="http://tempuri.org/IService1/EditManagementResponse")]
        string EditManagement(int mid, string u_id, string r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditManagement", ReplyAction="http://tempuri.org/IService1/EditManagementResponse")]
        System.Threading.Tasks.Task<string> EditManagementAsync(int mid, string u_id, string r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteManagement", ReplyAction="http://tempuri.org/IService1/DeleteManagementResponse")]
        string DeleteManagement(int mmid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteManagement", ReplyAction="http://tempuri.org/IService1/DeleteManagementResponse")]
        System.Threading.Tasks.Task<string> DeleteManagementAsync(int mmid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMenues", ReplyAction="http://tempuri.org/IService1/AddMenuesResponse")]
        string AddMenues(int r_id, string fname, string fdescrip, string fimage, decimal fprice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMenues", ReplyAction="http://tempuri.org/IService1/AddMenuesResponse")]
        System.Threading.Tasks.Task<string> AddMenuesAsync(int r_id, string fname, string fdescrip, string fimage, decimal fprice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMenue", ReplyAction="http://tempuri.org/IService1/getMenueResponse")]
        TheLuup.theluupservicereference.Menues getMenue(int mu_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMenue", ReplyAction="http://tempuri.org/IService1/getMenueResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.Menues> getMenueAsync(int mu_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMenues", ReplyAction="http://tempuri.org/IService1/getMenuesResponse")]
        TheLuup.theluupservicereference.Menues[] getMenues(int r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMenues", ReplyAction="http://tempuri.org/IService1/getMenuesResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.Menues[]> getMenuesAsync(int r_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditMenue", ReplyAction="http://tempuri.org/IService1/EditMenueResponse")]
        string EditMenue(int mid, string fname, string fdescrip, string fimage, decimal fprice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditMenue", ReplyAction="http://tempuri.org/IService1/EditMenueResponse")]
        System.Threading.Tasks.Task<string> EditMenueAsync(int mid, string fname, string fdescrip, string fimage, decimal fprice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMenu", ReplyAction="http://tempuri.org/IService1/DeleteMenuResponse")]
        string DeleteMenu(int mid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMenu", ReplyAction="http://tempuri.org/IService1/DeleteMenuResponse")]
        System.Threading.Tasks.Task<string> DeleteMenuAsync(int mid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMenus", ReplyAction="http://tempuri.org/IService1/DeleteMenusResponse")]
        string DeleteMenus(int rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMenus", ReplyAction="http://tempuri.org/IService1/DeleteMenusResponse")]
        System.Threading.Tasks.Task<string> DeleteMenusAsync(int rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRequest", ReplyAction="http://tempuri.org/IService1/AddRequestResponse")]
        string AddRequest(int u_id, int ur_id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRequest", ReplyAction="http://tempuri.org/IService1/AddRequestResponse")]
        System.Threading.Tasks.Task<string> AddRequestAsync(int u_id, int ur_id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRequest", ReplyAction="http://tempuri.org/IService1/DeleteRequestResponse")]
        string DeleteRequest(int u_id, int ur_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRequest", ReplyAction="http://tempuri.org/IService1/DeleteRequestResponse")]
        System.Threading.Tasks.Task<string> DeleteRequestAsync(int u_id, int ur_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRequest", ReplyAction="http://tempuri.org/IService1/getRequestResponse")]
        TheLuup.theluupservicereference.LRequest getRequest(int u_id, int ur_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRequest", ReplyAction="http://tempuri.org/IService1/getRequestResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.LRequest> getRequestAsync(int u_id, int ur_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRequests", ReplyAction="http://tempuri.org/IService1/getRequestsResponse")]
        TheLuup.theluupservicereference.LRequest[] getRequests(int ur_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRequests", ReplyAction="http://tempuri.org/IService1/getRequestsResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.LRequest[]> getRequestsAsync(int ur_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRequestStatus", ReplyAction="http://tempuri.org/IService1/UpdateRequestStatusResponse")]
        string UpdateRequestStatus(int u_id, int ur_id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRequestStatus", ReplyAction="http://tempuri.org/IService1/UpdateRequestStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateRequestStatusAsync(int u_id, int ur_id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFreind", ReplyAction="http://tempuri.org/IService1/AddFreindResponse")]
        string AddFreind(string chatcode, int u_id, int uf_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFreind", ReplyAction="http://tempuri.org/IService1/AddFreindResponse")]
        System.Threading.Tasks.Task<string> AddFreindAsync(string chatcode, int u_id, int uf_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFreinds", ReplyAction="http://tempuri.org/IService1/getFreindsResponse")]
        TheLuup.theluupservicereference.LFreinds[] getFreinds(int u_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFreinds", ReplyAction="http://tempuri.org/IService1/getFreindsResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.LFreinds[]> getFreindsAsync(int u_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFreind", ReplyAction="http://tempuri.org/IService1/getFreindResponse")]
        TheLuup.theluupservicereference.LFreinds getFreind(int u_id, int uf_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFreind", ReplyAction="http://tempuri.org/IService1/getFreindResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.LFreinds> getFreindAsync(int u_id, int uf_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddChat", ReplyAction="http://tempuri.org/IService1/AddChatResponse")]
        string AddChat(string chatcode, int u_id, int uf_id, string message, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddChat", ReplyAction="http://tempuri.org/IService1/AddChatResponse")]
        System.Threading.Tasks.Task<string> AddChatAsync(string chatcode, int u_id, int uf_id, string message, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getChat", ReplyAction="http://tempuri.org/IService1/getChatResponse")]
        TheLuup.theluupservicereference.LChats[] getChat(string chatcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getChat", ReplyAction="http://tempuri.org/IService1/getChatResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.LChats[]> getChatAsync(string chatcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGroup", ReplyAction="http://tempuri.org/IService1/AddGroupResponse")]
        string AddGroup(string groupdchat, string name, int u_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGroup", ReplyAction="http://tempuri.org/IService1/AddGroupResponse")]
        System.Threading.Tasks.Task<string> AddGroupAsync(string groupdchat, string name, int u_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGroup", ReplyAction="http://tempuri.org/IService1/getGroupResponse")]
        TheLuup.theluupservicereference.GroupChat[] getGroup(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGroup", ReplyAction="http://tempuri.org/IService1/getGroupResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.GroupChat[]> getGroupAsync(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSingleGroup", ReplyAction="http://tempuri.org/IService1/getSingleGroupResponse")]
        TheLuup.theluupservicereference.GroupChat[] getSingleGroup(string groupdchat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSingleGroup", ReplyAction="http://tempuri.org/IService1/getSingleGroupResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.GroupChat[]> getSingleGroupAsync(string groupdchat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        TheLuup.theluupservicereference.CompositeType GetDataUsingDataContract(TheLuup.theluupservicereference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<TheLuup.theluupservicereference.CompositeType> GetDataUsingDataContractAsync(TheLuup.theluupservicereference.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TheLuup.theluupservicereference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TheLuup.theluupservicereference.IService1>, TheLuup.theluupservicereference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string signin(string email, string password) {
            return base.Channel.signin(email, password);
        }
        
        public System.Threading.Tasks.Task<string> signinAsync(string email, string password) {
            return base.Channel.signinAsync(email, password);
        }
        
        public string AddUser(string email, string password, string firstname, string lastname, string image, string type) {
            return base.Channel.AddUser(email, password, firstname, lastname, image, type);
        }
        
        public System.Threading.Tasks.Task<string> AddUserAsync(string email, string password, string firstname, string lastname, string image, string type) {
            return base.Channel.AddUserAsync(email, password, firstname, lastname, image, type);
        }
        
        public TheLuup.theluupservicereference.Users getUser(int id) {
            return base.Channel.getUser(id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.Users> getUserAsync(int id) {
            return base.Channel.getUserAsync(id);
        }
        
        public TheLuup.theluupservicereference.Users[] getUsers() {
            return base.Channel.getUsers();
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.Users[]> getUsersAsync() {
            return base.Channel.getUsersAsync();
        }
        
        public string getUserID(string email) {
            return base.Channel.getUserID(email);
        }
        
        public System.Threading.Tasks.Task<string> getUserIDAsync(string email) {
            return base.Channel.getUserIDAsync(email);
        }
        
        public string DeleteUser(int uid) {
            return base.Channel.DeleteUser(uid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int uid) {
            return base.Channel.DeleteUserAsync(uid);
        }
        
        public string EditUser(int uid, string email, string firstname, string lastname, string image, string type) {
            return base.Channel.EditUser(uid, email, firstname, lastname, image, type);
        }
        
        public System.Threading.Tasks.Task<string> EditUserAsync(int uid, string email, string firstname, string lastname, string image, string type) {
            return base.Channel.EditUserAsync(uid, email, firstname, lastname, image, type);
        }
        
        public string AddResturant(string firstname, string location, string image, string coverimage, string rating) {
            return base.Channel.AddResturant(firstname, location, image, coverimage, rating);
        }
        
        public System.Threading.Tasks.Task<string> AddResturantAsync(string firstname, string location, string image, string coverimage, string rating) {
            return base.Channel.AddResturantAsync(firstname, location, image, coverimage, rating);
        }
        
        public TheLuup.theluupservicereference.Restuarent getResturant(int r_id) {
            return base.Channel.getResturant(r_id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.Restuarent> getResturantAsync(int r_id) {
            return base.Channel.getResturantAsync(r_id);
        }
        
        public TheLuup.theluupservicereference.Restuarent[] getResturants() {
            return base.Channel.getResturants();
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.Restuarent[]> getResturantsAsync() {
            return base.Channel.getResturantsAsync();
        }
        
        public string EditResturant(int rid, string firstname, string location, string image, string coverimage, string rating) {
            return base.Channel.EditResturant(rid, firstname, location, image, coverimage, rating);
        }
        
        public System.Threading.Tasks.Task<string> EditResturantAsync(int rid, string firstname, string location, string image, string coverimage, string rating) {
            return base.Channel.EditResturantAsync(rid, firstname, location, image, coverimage, rating);
        }
        
        public string DeleteResturant(int rid) {
            return base.Channel.DeleteResturant(rid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteResturantAsync(int rid) {
            return base.Channel.DeleteResturantAsync(rid);
        }
        
        public string AddManagement(string u_id, string r_id) {
            return base.Channel.AddManagement(u_id, r_id);
        }
        
        public System.Threading.Tasks.Task<string> AddManagementAsync(string u_id, string r_id) {
            return base.Channel.AddManagementAsync(u_id, r_id);
        }
        
        public int getRID(string u_id) {
            return base.Channel.getRID(u_id);
        }
        
        public System.Threading.Tasks.Task<int> getRIDAsync(string u_id) {
            return base.Channel.getRIDAsync(u_id);
        }
        
        public string EditManagement(int mid, string u_id, string r_id) {
            return base.Channel.EditManagement(mid, u_id, r_id);
        }
        
        public System.Threading.Tasks.Task<string> EditManagementAsync(int mid, string u_id, string r_id) {
            return base.Channel.EditManagementAsync(mid, u_id, r_id);
        }
        
        public string DeleteManagement(int mmid) {
            return base.Channel.DeleteManagement(mmid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteManagementAsync(int mmid) {
            return base.Channel.DeleteManagementAsync(mmid);
        }
        
        public string AddMenues(int r_id, string fname, string fdescrip, string fimage, decimal fprice) {
            return base.Channel.AddMenues(r_id, fname, fdescrip, fimage, fprice);
        }
        
        public System.Threading.Tasks.Task<string> AddMenuesAsync(int r_id, string fname, string fdescrip, string fimage, decimal fprice) {
            return base.Channel.AddMenuesAsync(r_id, fname, fdescrip, fimage, fprice);
        }
        
        public TheLuup.theluupservicereference.Menues getMenue(int mu_id) {
            return base.Channel.getMenue(mu_id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.Menues> getMenueAsync(int mu_id) {
            return base.Channel.getMenueAsync(mu_id);
        }
        
        public TheLuup.theluupservicereference.Menues[] getMenues(int r_id) {
            return base.Channel.getMenues(r_id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.Menues[]> getMenuesAsync(int r_id) {
            return base.Channel.getMenuesAsync(r_id);
        }
        
        public string EditMenue(int mid, string fname, string fdescrip, string fimage, decimal fprice) {
            return base.Channel.EditMenue(mid, fname, fdescrip, fimage, fprice);
        }
        
        public System.Threading.Tasks.Task<string> EditMenueAsync(int mid, string fname, string fdescrip, string fimage, decimal fprice) {
            return base.Channel.EditMenueAsync(mid, fname, fdescrip, fimage, fprice);
        }
        
        public string DeleteMenu(int mid) {
            return base.Channel.DeleteMenu(mid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMenuAsync(int mid) {
            return base.Channel.DeleteMenuAsync(mid);
        }
        
        public string DeleteMenus(int rid) {
            return base.Channel.DeleteMenus(rid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteMenusAsync(int rid) {
            return base.Channel.DeleteMenusAsync(rid);
        }
        
        public string AddRequest(int u_id, int ur_id, string status) {
            return base.Channel.AddRequest(u_id, ur_id, status);
        }
        
        public System.Threading.Tasks.Task<string> AddRequestAsync(int u_id, int ur_id, string status) {
            return base.Channel.AddRequestAsync(u_id, ur_id, status);
        }
        
        public string DeleteRequest(int u_id, int ur_id) {
            return base.Channel.DeleteRequest(u_id, ur_id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRequestAsync(int u_id, int ur_id) {
            return base.Channel.DeleteRequestAsync(u_id, ur_id);
        }
        
        public TheLuup.theluupservicereference.LRequest getRequest(int u_id, int ur_id) {
            return base.Channel.getRequest(u_id, ur_id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.LRequest> getRequestAsync(int u_id, int ur_id) {
            return base.Channel.getRequestAsync(u_id, ur_id);
        }
        
        public TheLuup.theluupservicereference.LRequest[] getRequests(int ur_id) {
            return base.Channel.getRequests(ur_id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.LRequest[]> getRequestsAsync(int ur_id) {
            return base.Channel.getRequestsAsync(ur_id);
        }
        
        public string UpdateRequestStatus(int u_id, int ur_id, string status) {
            return base.Channel.UpdateRequestStatus(u_id, ur_id, status);
        }
        
        public System.Threading.Tasks.Task<string> UpdateRequestStatusAsync(int u_id, int ur_id, string status) {
            return base.Channel.UpdateRequestStatusAsync(u_id, ur_id, status);
        }
        
        public string AddFreind(string chatcode, int u_id, int uf_id) {
            return base.Channel.AddFreind(chatcode, u_id, uf_id);
        }
        
        public System.Threading.Tasks.Task<string> AddFreindAsync(string chatcode, int u_id, int uf_id) {
            return base.Channel.AddFreindAsync(chatcode, u_id, uf_id);
        }
        
        public TheLuup.theluupservicereference.LFreinds[] getFreinds(int u_id) {
            return base.Channel.getFreinds(u_id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.LFreinds[]> getFreindsAsync(int u_id) {
            return base.Channel.getFreindsAsync(u_id);
        }
        
        public TheLuup.theluupservicereference.LFreinds getFreind(int u_id, int uf_id) {
            return base.Channel.getFreind(u_id, uf_id);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.LFreinds> getFreindAsync(int u_id, int uf_id) {
            return base.Channel.getFreindAsync(u_id, uf_id);
        }
        
        public string AddChat(string chatcode, int u_id, int uf_id, string message, string type) {
            return base.Channel.AddChat(chatcode, u_id, uf_id, message, type);
        }
        
        public System.Threading.Tasks.Task<string> AddChatAsync(string chatcode, int u_id, int uf_id, string message, string type) {
            return base.Channel.AddChatAsync(chatcode, u_id, uf_id, message, type);
        }
        
        public TheLuup.theluupservicereference.LChats[] getChat(string chatcode) {
            return base.Channel.getChat(chatcode);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.LChats[]> getChatAsync(string chatcode) {
            return base.Channel.getChatAsync(chatcode);
        }
        
        public string AddGroup(string groupdchat, string name, int u_id) {
            return base.Channel.AddGroup(groupdchat, name, u_id);
        }
        
        public System.Threading.Tasks.Task<string> AddGroupAsync(string groupdchat, string name, int u_id) {
            return base.Channel.AddGroupAsync(groupdchat, name, u_id);
        }
        
        public TheLuup.theluupservicereference.GroupChat[] getGroup(int uid) {
            return base.Channel.getGroup(uid);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.GroupChat[]> getGroupAsync(int uid) {
            return base.Channel.getGroupAsync(uid);
        }
        
        public TheLuup.theluupservicereference.GroupChat[] getSingleGroup(string groupdchat) {
            return base.Channel.getSingleGroup(groupdchat);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.GroupChat[]> getSingleGroupAsync(string groupdchat) {
            return base.Channel.getSingleGroupAsync(groupdchat);
        }
        
        public TheLuup.theluupservicereference.CompositeType GetDataUsingDataContract(TheLuup.theluupservicereference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<TheLuup.theluupservicereference.CompositeType> GetDataUsingDataContractAsync(TheLuup.theluupservicereference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
